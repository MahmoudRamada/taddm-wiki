#	The loadDlaBooks utility downloads DLA books from an ftp site, and loads component information represented in the books into the TADDM database
#
#	The intended use of this utility is to automate the tasks required to load DLA books into the TADDM database, so that these tasks can be scheduled
#	to run without user intervention on a repeated basis  
#	 
#	Arguments to control the operation of the utility can be specified as invocation arguments or in a properties file 


#	PROPERTYName		INVOCATIONArgument		dataType 	DESCRIPTION
#=====================================================================================================================================================================
#   action							-a			string		The action to be performed. Value must be 'load' or 'list'                      
#              												Default value:  None
#	
#															'load' instructs the script to download DLA books, and load them into the TADDM database 
#															by calling the idmlload TADDM script. 
#															To download all available DLA books, and optionally generate delta books WITHOUT loading the DLAs
#															into the TADDM database, use 'load' in combination with runType = test 
#		
#															'list' simply lists the files on the ftp site
#
# 	debug							-d			boolean		Echoes debug messages to the console. Valid options:  True | False. Default value:  False	                                   
#
# 	deltaBookScriptLocation			-s			string		Location, relative to the invocation directory, of the TADDM deltabook utility
#															If the deltabooks utility has been unacked to $COLLATION_HOME/tools/deltabooks and the loadDlaPooks script is
#															invoked from $COLLATION_HOME/custom/bin   use a value of ../../tools/deltabooks.
#															In a Windows environment use 'double slashes' to separate directories.  
#															For example  ..//..//tools//deltabooks   or ..\\..\\tools\\deltabooks
#														    Default value:  None                 
#
# 	enableDeltaBookProcessing			-D			boolean		Controls whether to generate deltabooks prior to loading the information into the TADDM database.
#															Valid options:  True | False. Default value:  False
#                                   
# 	ftpDebugLevel					-f  		integer 	Sets the debugging level for the ftp commands executed by the script 
#															Valid options: 0,1, or 2. Default value: 0                          
#            
# 	ftpHost							-H			string		Hostname or IPAddress of the FTP server from which DLA books are downloaded
#															Default value:  None			                          
# 	ftpPassword						-p			string		Password for the user that is used to access the FTP server                                
#															Default value:  None
#
# 	ftpPort							-P  		integer		Portnumber to be used to access the FTP server
#															Default value: 21
#                                      
# 	ftpSourceDirectory				-S			string		Directory name, relative to the home directory for the user used to accesss the FTP server, 
#															from which DLA books will be retrieved                                 
#															Default value:  None
#
# 	targetDirectory					-T			string		Local directory, relative to the invocation directory, to which DLA books from the FTP server are downloaded                             
#															Default value:  None (the directory identified by the "com.ibm.cdb.bulk.workdir" property in the bulkload.properties file  will be used)
#
# 	ftpUser							-u			string		User name to be used to access the FTP server
#															Default value:  None                            
#
# 	help							-h			boolean		Invokes the help and usage information for the script   
#
# 	loadidmlOptions					-o			string		Arguments - except for locationTag (-l) - to be parsed to the loadidml utility
#															Default value:  None                                   
#
# 	locationTag						-l			string		Location to be assigned to the components represented in the DLA books
#															Default value:  None                               
#
# 	propertiesFile					-I			string		Name of the properties file used to control the execution of the script. 
#															The file name must be fully qualified, or relative to the invocation directory 
#															Default value: ..\etc\loadDlaBooks.properties          
#
# 	quiet							-q			boolean		Suppress all output to the console
#															Default value:  False                               
#                                   
# 	removeSourceFiles				-R			boolean		Controls if the source files (hosted on the FTP server) should be removed after successful download.
#															Default value:  False 
#                             
# 	keepWorkFiles					-K			boolean		Controls if the local copies of DLA books and delta books should be removed when the script terminates.
#															Default value:  False
#                                    
# 	runType							-r			string		Controls whether to test or execute the specified action. Valid options:  'test', 'doIt' 
#															When action is 'load' using the 'test' runtype will cause all DLA books to be processed, but not loaded into the TADDM database.
#															Default value:  test
#
# 	showInvocationOptions			-O			boolean     Controls if the active arguments, provided as execution arguments or specified in the properties file, will be displayed on the console.
#															Default value:  False
#
# 	suppressWarnings				-W			boolean		Controls if warning messages should be echoed to the console.
#															Default value:  False
#                             
# 	targetDirectory					-T			string		Local directory, relative to the invocation directory, to which DLA books from the FTP server are downloaded                             
#															Default value:  None (the directory identified by the "com.ibm.cdb.bulk.workdir" property in the bulkload.properties file  will be used)
#
# 	targetFilenameFilterRegex		-F			string		Regular MATCH expression used to specify file name pattern that DLA book files must adhere to in order to be processed.
#															Default value:  None 
#                               
# 	targetFilemaxAgeDays    		-A			integer		Maximum age of DLA books to be downloaded from the ftp server
#															Default value:  None 
#                               
# 	trace							-t			boolean		Enables tracing.
#															Default value:  False        


# [ACTION OPTIONS]
action = help 
runType = test

# [FTP OPTIONS]
ftpHost = 10.1.1.1
ftpport = 21
ftpUser= my_ftpUser
ftpPassword=my_ftpUser_Password
ftpDebugLevel=0
ftpsourcedirectory = dlaBooks
ftpRetries = 3
ftpWaitTime = 8

# [PROCESSING OPTIONS]
targetFileMaxAgeDays = 7
	
## all xml files 
targetFilenameFilterRegex = (.*\.xml)
## all xml files containing the string 'CICS'
#targetFilenameFilterRegex = (.*CICS.*\.xml)
## all xml files NOT containing the string 'CICS'
#targetFilenameFilterRegex = ^((?!CICS).)*.xml$
## all xml files NOT containing the string 'Z'
#targetFilenameFilterRegex = ^((?!Z).)*.xml$


#targetdirectory = ../dlaBooks
#enableDeltaBookProcessing = True
#deltaBookScriptLocation = ../../tools\deltabooks
##   WINDOWS deltaBookScriptLocation = ..\\..\\tools\deltabooks
##   UNIX    deltaBookScriptLocation = ../../tools/deltabooks
loadidmlOptions = -g -e
#locationTag = MAINFRAME
#keepWorkFiles = False
#removeSourceFiles = False

# [MISCELANIOUS OPTIONS]
#debug = false
#quiet = False
#showInvocationOptions = False
#suppressWarnings = False
#trace = False
